/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package broadband_distribution;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ishfaq
 */
public class customer_menu1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form customer_menu1
     */
    public customer_menu1() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            String sql = "SELECT * FROM customer";
            // String sql= "SELECT  customer.customerId, customer.cName, customer.cEmail, customer.cAdress,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
    
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
                String femail = resultSet.getString("cEmail");

                String fAd = resultSet.getString("cAdress");
                String fNo = resultSet.getString("cPhoneNo");
                String p  = resultSet.getString("packageN");

                String tData[] = {id, fname, femail, fAd, fNo,p};
                DefaultTableModel tbm1 = (DefaultTableModel) csTable1.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        csTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        dline = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jButton8 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(700, 540));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setBackground(new java.awt.Color(0, 153, 255));
        jComboBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NAME", "ID" }));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("ENTER KEYWORDS :");

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setText("SREACH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        csTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        csTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "ADDRESS", "PHONE NO", "EMAIL", "PAKAGE NO"
            }
        ));
        jScrollPane1.setViewportView(csTable1);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("SERACH BY :");

        dline.setBorder(null);
        dline.setOpaque(false);
        dline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlineActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 203, 133));
        jButton8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton8.setText("Go To PROFILE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 538, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel5)
                            .addGap(29, 29, 29)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(22, 22, 22)
                            .addComponent(jLabel6)
                            .addGap(7, 7, 7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dline, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(20, 20, 20)
                            .addComponent(jButton4))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 2, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(dline, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(jButton4))))
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 97, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dlineActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
       String tname = "", temail = "", taddress = "", customerId1 = "";
        int tNo;
        DefaultTableModel defaultTableModel = (DefaultTableModel) csTable1.getModel();

        if (csTable1.getSelectedRowCount() == 1) {
            //   System.out.println("at update");

            //tname = name.getText();
          //  temail = email.getText();
        //    taddress = address.getText();
          //  tNo = Integer.parseInt(contactNo.getText());

            int row = csTable1.getSelectedRow();
            customerId1 = defaultTableModel.getValueAt(row, 0).toString();
            new  CustomerProfile(customerId1).setVisible(true);



           
            }
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel tbm = (DefaultTableModel) csTable1.getModel();
                tbm.setRowCount(0);
        String value = jComboBox1.getSelectedItem().toString();
        if (value.equals("NAME")) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead = dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                //    ResultSet resultSet = statement.executeQuery
                ResultSet resultSet = statement.executeQuery("SELECT  * From customer  where customer.cName like '%" + dead + "%' ");
                if (resultSet.next()) {

                     String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
                String femail = resultSet.getString("cEmail");

                String fAd = resultSet.getString("cAdress");
                String fNo = resultSet.getString("cPhoneNo");
                String p  = resultSet.getString("packageN");

                    String tData[] = {id,fname,femail,fAd,fNo,p};
                    DefaultTableModel tbm1 = (DefaultTableModel) csTable1.getModel();
                    tbm1.addRow(tData);

                } else {
                    JOptionPane.showMessageDialog(this, "Enter Keyword");

                }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (value.equals("ID")) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead = dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                //    ResultSet resultSet = statement.executeQuery
                ResultSet resultSet = statement.executeQuery(" SELECT  * From customer  where customer.customerId like '" + Integer.parseInt(dead) + "'");
                if (resultSet.next()) {

                       String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
                String femail = resultSet.getString("cEmail");

                String fAd = resultSet.getString("cAdress");
                String fNo = resultSet.getString("cPhoneNo");
                String p  = resultSet.getString("packageN");

                    String tData[] = {id,fname,femail,fAd,fNo,p};

                    
                    DefaultTableModel tbm1 = (DefaultTableModel) csTable1.getModel();
                    tbm1.addRow(tData);

                } else {
                    JOptionPane.showMessageDialog(this, "Enter Keyword");

                }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
    }            
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable csTable1;
    private javax.swing.JTextField dline;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
