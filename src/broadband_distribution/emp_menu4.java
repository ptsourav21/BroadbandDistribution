/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package broadband_distribution;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ishfaq
 */
public class emp_menu4 extends javax.swing.JInternalFrame {

    /**
     * Creates new form emp_menu4
     */
    public emp_menu4() {
        initComponents();
         hide.setVisible(false);
         
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            String sql = "SELECT employee.employeeId, employee.eFame,employee.eLastName, employee.ephoneNo,employee.working_area, schedule.working_time,schedule.totalTime   From employee INNER JOIN schedule on employee.employeeId= schedule.employeeId";

            //  String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                String id = resultSet.getString("employeeId");
                String fname = resultSet.getString("eFame");
                String lname = resultSet.getString("elastName");

                
               
                String fNo = resultSet.getString("ephoneNo");

                String des = resultSet.getString("working_time");
                String sal = resultSet.getString("totalTime");
                 String wa = resultSet.getString("working_area");
                String tData[] = {id, fname, lname, fNo,  des, sal, wa};
                DefaultTableModel tbm1 = (DefaultTableModel) scheduleTable.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    

 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        dline = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        hide = new javax.swing.JPanel();
        id = new javax.swing.JTextField();
        f = new javax.swing.JTextField();
        l = new javax.swing.JTextField();
        phn = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        sch = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(750, 540));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setBackground(new java.awt.Color(0, 153, 255));
        jComboBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "NAME" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("ENTER KEYWORDS :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setText("SREACH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        jTextField1.setBorder(null);
        jTextField1.setOpaque(false);
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        scheduleTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First NAME", "Last Name", "PHONE NO", "SCHEDULE", "TIME"
            }
        ));
        scheduleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scheduleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(scheduleTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 650, 190));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("SERACH BY :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jTextField2.setBorder(null);
        jTextField2.setOpaque(false);
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        dline.setBorder(null);
        dline.setOpaque(false);
        dline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlineActionPerformed(evt);
            }
        });
        jPanel1.add(dline, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 150, 30));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 150, 20));

        hide.setBackground(new java.awt.Color(204, 204, 204));

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        phn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hideLayout = new javax.swing.GroupLayout(hide);
        hide.setLayout(hideLayout);
        hideLayout.setHorizontalGroup(
            hideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hideLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(phn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
        );
        hideLayout.setVerticalGroup(
            hideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hideLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(hideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel1.add(hide, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 510, 100));

        jButton6.setBackground(new java.awt.Color(0, 203, 133));
        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("UPDATE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, -1, 40));
        jPanel1.add(sch, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 90, 30));
        jPanel1.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 440, 100, 30));

        jButton1.setBackground(new java.awt.Color(0, 203, 133));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, 100, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dlineActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

       
        
          DefaultTableModel tbm = (DefaultTableModel) scheduleTable.getModel();
                tbm.setRowCount(0);
 String value= jComboBox1.getSelectedItem().toString();
        if(value.equals("ID")){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead= dline.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
               //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                
   // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";

            //    ResultSet resultSet = statement.executeQuery
                ResultSet resultSet = statement.executeQuery("select E.employeeId,E.eFame,E.elastName,E.ephoneNo,S.working_time,S.totalTime from employee E,schedule S where EXISTS (select E.employeeId from employee join schedule on(E.employeeId =S.employeeId) where S.employeeId= '"+ Integer.parseInt(dead) +"' )" );

            
            if (resultSet.next()) {
               
                 String Bid = resultSet.getString("employeeId");
                String Cid = resultSet.getString("eFame");
                String amount = resultSet.getString("elastName");

                String deadline = resultSet.getString("ephoneNo");
                String method = resultSet.getString("working_time");
                String stat= resultSet.getString("totalTime");
               //  String stat2= resultSet.getString("area");

                String tData[] = {Bid, Cid,amount,deadline,method,stat};
                DefaultTableModel tbm1 = (DefaultTableModel) scheduleTable.getModel();
                tbm1.addRow(tData);
                
       
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Enter Keyword");
                   
            }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else if(value.equals("NAME")){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");
                String dead= dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
               ResultSet resultSet = statement.executeQuery("select E.employeeId,E.eFame,E.elastName,E.ephoneNo,S.working_time,S.totalTime from employee E,schedule S where EXISTS (select E.employeeId from employee join schedule on(E.employeeId =S.employeeId) where E.eFame like'%"+ dead +"%')" );
            if (resultSet.next()) {
               
                 String Bid = resultSet.getString("employeeId");
                String Cid = resultSet.getString("eFame");
                String amount = resultSet.getString("elastName");

                String deadline = resultSet.getString("ephoneNo");
                String method = resultSet.getString("working_time");
                String stat= resultSet.getString("totalTime");
               //  String stat2= resultSet.getString("area");

                String tData[] = {Bid, Cid,amount,deadline,method,stat};
                DefaultTableModel tbm1 = (DefaultTableModel) scheduleTable.getModel();
                tbm1.addRow(tData);

                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Enter Keyword");

                }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        else if(value.equals("WORKING AREA")){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead= dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                ResultSet resultSet = statement.executeQuery("select E.employeeId,E.eFame,E.elastName,E.ephoneNo,S.working_time,S.totalTime from employee E,schedule S where EXISTS (select E.employeeId from employee join schedule on(E.employeeId =S.employeeId) where S.area like'%"+ dead +"%' )" );

            
            if (resultSet.next()) {
               
                 String Bid = resultSet.getString("employeeId");
                String Cid = resultSet.getString("eFame");
                String amount = resultSet.getString("elastName");

                String deadline = resultSet.getString("ephoneNo");
                String method = resultSet.getString("working_time");
                String stat= resultSet.getString("totalTime");
              //   String stat2= resultSet.getString("area");

                String tData[] = {Bid, Cid,amount,deadline,method,stat};
                DefaultTableModel tbm1 = (DefaultTableModel) scheduleTable.getModel();
                tbm1.addRow(tData);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Enter Keyword");

                }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else{
         JOptionPane.showMessageDialog(this, "Enter Keyword");
        }

       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        String tname = "", temail = "",sss="",t="", taddress = "", customerId = "";
        int tNo;
        
        
        DefaultTableModel defaultTableModel = (DefaultTableModel) scheduleTable.getModel();

        if (scheduleTable.getSelectedRowCount() == 1) {
            //   System.out.println("at update");

            tname = f.getText();
            temail = l.getText();
          //  taddress = aw.getText();
            tNo = Integer.parseInt(phn.getText());
            
            t=time.getText();
            sss=sch.getText();

            int row = scheduleTable.getSelectedRow();
            customerId = defaultTableModel.getValueAt(row, 0).toString();
            // CustomerProfile(customerId).setVisible(true);
          //  CustomerProfile cp= new CustomerProfile(customerId.getText());

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String sql = "UPDATE schedule SET working_time='" + sss + "',totalTime='"+ Integer.parseInt(t)+"' where employeeId = " + Integer.parseInt(customerId) + ";";

                PreparedStatement prepare = connection.prepareStatement(sql);

                prepare.executeUpdate();
               
                DefaultTableModel tbm = (DefaultTableModel) scheduleTable.getModel();
                tbm.setRowCount(0);
                JOptionPane.showMessageDialog(this, "Successfully Updated.");
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void phnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phnActionPerformed

    private void scheduleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheduleTableMouseClicked
        // TODO add your handling code here:
        
          DefaultTableModel tbm1 = (DefaultTableModel) scheduleTable.getModel();

        String tid = tbm1.getValueAt(scheduleTable.getSelectedRow(), 0).toString();

        String tName = tbm1.getValueAt(scheduleTable.getSelectedRow(), 1).toString();
        String nameL = tbm1.getValueAt(scheduleTable.getSelectedRow(), 2).toString();
        String con = tbm1.getValueAt(scheduleTable.getSelectedRow(), 3).toString();
        String sche = tbm1.getValueAt(scheduleTable.getSelectedRow(), 4).toString();
         String t = tbm1.getValueAt(scheduleTable.getSelectedRow(), 5).toString();
          //String wa = tbm1.getValueAt(scheduleTable.getSelectedRow(), 6).toString();
        id.setText(tid);
        f.setText(tName);
        l.setText(nameL);
        phn.setText(con);
        sch.setText(sche);
                time.setText(t);

                     //   time.setText(wa);

    }//GEN-LAST:event_scheduleTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         
          DefaultTableModel tbm = (DefaultTableModel) scheduleTable.getModel();
                tbm.setRowCount(0);
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            String sql = "SELECT employee.employeeId, employee.eFame,employee.eLastName, employee.ephoneNo,employee.working_area, schedule.working_time,schedule.totalTime   From employee INNER JOIN schedule on employee.employeeId= schedule.employeeId";

            //  String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                String id = resultSet.getString("employeeId");
                String fname = resultSet.getString("eFame");
                String lname = resultSet.getString("elastName");

                
               
                String fNo = resultSet.getString("ephoneNo");

                String des = resultSet.getString("working_time");
                String sal = resultSet.getString("totalTime");
                 String wa = resultSet.getString("working_area");
                String tData[] = {id, fname, lname, fNo,  des, sal, wa};
                DefaultTableModel tbm1 = (DefaultTableModel) scheduleTable.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dline;
    private javax.swing.JTextField f;
    private javax.swing.JPanel hide;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField l;
    private javax.swing.JTextField phn;
    private javax.swing.JTextField sch;
    private javax.swing.JTable scheduleTable;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables
}
