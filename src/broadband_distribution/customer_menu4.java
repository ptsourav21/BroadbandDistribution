/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package broadband_distribution;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ishfaq
 */
public class customer_menu4 extends javax.swing.JInternalFrame {

    /**
     * Creates new form customer_menu4
     */
    public customer_menu4() {
        initComponents();
            hide.setVisible(false);
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
       // hide.setVisible(False);
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            //String sql = "SELECT * FROM bill";
            
            String sql= "SELECT customer.customerId, customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
            
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                //String Bid = resultSet.getString("billId");
                String Cid = resultSet.getString("customerId");
                String name = resultSet.getString("cName");
     String phn= resultSet.getString("cPhoneNo");
                String amount = resultSet.getString("amount");
                String stat = resultSet.getString("status");
                String dead= resultSet.getString("deadline");

                String tData[] = { Cid,name,phn,amount,stat,dead};
                DefaultTableModel tbm1 = (DefaultTableModel) billTable.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollBar1 = new javax.swing.JScrollBar();
        panel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        billTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBox1 = new javax.swing.JComboBox<>();
        dline = new javax.swing.JTextField();
        Refresh = new javax.swing.JButton();
        hide = new javax.swing.JPanel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        dead = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        stat = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(750, 540));

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setPreferredSize(new java.awt.Dimension(750, 540));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("SERACH BY :");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("ENTER KEYWORDS :");

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setText("SREACH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        billTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        billTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "NAME", "PHONE  NO", "AMOUNT", "STATUS", "DEADLINE"
            }
        ));
        billTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(billTable);

        jComboBox1.setBackground(new java.awt.Color(0, 153, 255));
        jComboBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NAME", "ID", "STATUS" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        dline.setBorder(null);

        Refresh.setBackground(new java.awt.Color(0, 203, 133));
        Refresh.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        hide.setBackground(new java.awt.Color(204, 204, 204));

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hideLayout = new javax.swing.GroupLayout(hide);
        hide.setLayout(hideLayout);
        hideLayout.setHorizontalGroup(
            hideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hideLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        hideLayout.setVerticalGroup(
            hideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hideLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(hideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jButton6.setBackground(new java.awt.Color(0, 203, 133));
        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("UPDATE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(353, 353, 353)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(37, 37, 37)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(dline, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4))))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stat, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hide, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dline, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addGap(11, 11, 11)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Refresh, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(stat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void billTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billTableMouseClicked
        // TODO add your handling code here:
        
        
  DefaultTableModel tbm1 = (DefaultTableModel) billTable.getModel();
  String pID = tbm1.getValueAt(billTable.getSelectedRow(), 0).toString();
        String tid = tbm1.getValueAt(billTable.getSelectedRow(), 1).toString();

        String tName = tbm1.getValueAt(billTable.getSelectedRow(), 2).toString();
        String tcontact = tbm1.getValueAt(billTable.getSelectedRow(), 3).toString();
         String stu = tbm1.getValueAt(billTable.getSelectedRow(), 4).toString();
          String comp = tbm1.getValueAt(billTable.getSelectedRow(), 5).toString();
               
               
              
                id.setText(pID);
        name.setText(tid);
        email.setText(tName);
    
        amount.setText(tcontact);
          stat.setText(stu);
          dead.setText(comp);
          

        
    }//GEN-LAST:event_billTableMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        
         DefaultTableModel tbm = (DefaultTableModel) billTable.getModel();
                tbm.setRowCount(0);
                
        String value= jComboBox1.getSelectedItem().toString();
        if(value.equals("ID")){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead= dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
               //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                
   // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";

            //    ResultSet resultSet = statement.executeQuery
          ResultSet resultSet = statement.executeQuery("select c.customerId,c.cName,c.cPhoneNo,b.amount,b.status,b.deadline from customer c join bill b on ( c.customerId=b.customerId) where b.customerId ='"+Integer.parseInt(dead)+"'" );

                while (resultSet.next()) {
                    String Bid = resultSet.getString("customerId");
                    String Bid2 = resultSet.getString("cName");
                    String Cid = resultSet.getString("cPhoneNo");
                    String amount = resultSet.getString("amount");
                    String stat= resultSet.getString("status");
                    String deadline = resultSet.getString("deadline");
                    
                   

                    String tData[] = {Bid,Bid2, Cid,amount,stat,deadline};
                    DefaultTableModel tbm1 = (DefaultTableModel) billTable.getModel();
                    tbm1.addRow(tData);

             
                   

                }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        else if(value.equals("STATUS")){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead= dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                ResultSet resultSet = statement.executeQuery("select c.customerId,c.cName,c.cPhoneNo,b.amount,b.status,b.deadline from customer c join bill b on ( c.customerId=b.customerId and b.status like '"+dead+"')" );

                while (resultSet.next()) {
                    String Bid = resultSet.getString("customerId");
                    String Bid2 = resultSet.getString("cName");
                    String Cid = resultSet.getString("cPhoneNo");
                    String amount = resultSet.getString("amount");
                    String stat= resultSet.getString("status");
                    String deadline = resultSet.getString("deadline");
                    
                   

                    String tData[] = {Bid,Bid2, Cid,amount,stat,deadline};
                    DefaultTableModel tbm1 = (DefaultTableModel) billTable.getModel();
                    tbm1.addRow(tData);

                }
              
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        else if(value.equals("NAME")){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead= dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                ResultSet resultSet = statement.executeQuery("select c.customerId,c.cName,c.cPhoneNo,b.amount,b.status,b.deadline from customer c join bill b on ( c.customerId=b.customerId) where c.cName like '%"+ dead +"%'" );

                if (resultSet.next()) {
                    String Bid = resultSet.getString("customerId");
                    String Bid2 = resultSet.getString("cName");
                    String Cid = resultSet.getString("cPhoneNo");
                    String amount = resultSet.getString("amount");
                    String stat= resultSet.getString("status");
                    String deadline = resultSet.getString("deadline");
                    
                   

                    String tData[] = {Bid,Bid2, Cid,amount,stat,deadline};
                    DefaultTableModel tbm1 = (DefaultTableModel) billTable.getModel();
                    tbm1.addRow(tData);

                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Enter Keyword");

                }
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else{
         JOptionPane.showMessageDialog(this, "Enter Keyword");
        }
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        
          
         DefaultTableModel tbm = (DefaultTableModel) billTable.getModel();
                tbm.setRowCount(0);
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            //String sql = "SELECT * FROM bill";
            
            String sql= "SELECT customer.customerId, customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
            
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                //String Bid = resultSet.getString("billId");
                String Cid = resultSet.getString("customerId");
                String name = resultSet.getString("cName");
     String phn= resultSet.getString("cPhoneNo");
                String amount = resultSet.getString("amount");
                String stat = resultSet.getString("status");
                String dead= resultSet.getString("deadline");

                String tData[] = { Cid,name,phn,amount,stat,dead};
                DefaultTableModel tbm1 = (DefaultTableModel) billTable.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
        
         String tname = "", temail = "", taddress = "", customerId = "",p="";
        int tNo;
        
        String pNam="", pno="";
        
        String s="";
        DefaultTableModel defaultTableModel = (DefaultTableModel) billTable.getModel();

        if (billTable.getSelectedRowCount() == 1) {
            //   System.out.println("at update");

            tname = name.getText();
            temail = email.getText();
            s=stat.getText();
          //  taddress = address.getText();
       //     tNo = Integer.parseInt(contactNo.getText());
       //     p=pack.getText();
            

            int row = billTable.getSelectedRow();
            customerId = defaultTableModel.getValueAt(row, 0).toString();
            // CustomerProfile(customerId).setVisible(true);
          //  CustomerProfile cp= new CustomerProfile(customerId.getText());

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");
                
                          Statement statement = connection.createStatement();

                

       
             
                
     String sql2 = "UPDATE bill SET status='" + s + "' where customerId = " + Integer.parseInt(customerId) + ";";
    PreparedStatement prepare1 = connection.prepareStatement(sql2);

                prepare1.executeUpdate();
                  
               
                DefaultTableModel tbm = (DefaultTableModel) billTable.getModel();
                tbm.setRowCount(0);
                JOptionPane.showMessageDialog(this, "Successfully Updated.");
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Refresh;
    private javax.swing.JTextField amount;
    private javax.swing.JTable billTable;
    private javax.swing.JTextField dead;
    private javax.swing.JTextField dline;
    private javax.swing.JTextField email;
    private javax.swing.JPanel hide;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField name;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField stat;
    // End of variables declaration//GEN-END:variables
}
