/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package broadband_distribution;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ishfaq
 */
public class customer_menu5 extends javax.swing.JInternalFrame {

    /**
     * Creates new form customer_menu5
     */
    public customer_menu5() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            String sql = "SELECT customer.customerId, customer.cName, customer.cPhoneNo,helpline.helpId, helpline.problem_status,helpline.problem_description From customer LEFT JOIN helpline on customer.customerId=helpline.customerId";
//    String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
    
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {
               

                String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
              //  String femail = resultSet.getString("cEmail");

                String fAd = resultSet.getString("helpId");
                String fNo = resultSet.getString("cPhoneNo");
                String p=  resultSet.getString("problem_status");
                String p_state= resultSet.getString("problem_description");

                String tData[] = {fAd,id, fname,fNo,p,p_state};
                DefaultTableModel tbm1 = (DefaultTableModel) comTable.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        comTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        csTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        dline = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        cmp = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        phn = new javax.swing.JTextField();
        stat = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        del = new javax.swing.JButton();
        hid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();

        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 540));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        comTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User ID ", "NAME", "PHONE  NO", "Problem Status", "Statement"
            }
        ));
        comTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(comTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 680, 170));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("SERACH BY :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(0, 153, 255));
        jComboBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NAME", "ID", "STATUS" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 100, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("ENTER KEYWORDS :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, -1));

        jInternalFrame1.setBorder(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(700, 540));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        csTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        csTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "EMAIL", "ADDRESS", "PHONE  NO", "Problem_description", "Problem_status"
            }
        ));
        csTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                csTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(csTable1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 700, 170));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("SERACH BY :");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jComboBox2.setBackground(new java.awt.Color(0, 153, 255));
        jComboBox2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NAME", "ID" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setText("ENTER KEYWORDS :");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );

        jPanel1.add(jInternalFrame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setText("SREACH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 160, 20));

        dline.setBorder(null);
        dline.setOpaque(false);
        jPanel1.add(dline, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 160, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("User ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Complain");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("PHONE NO");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Name");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 250, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Status");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, -1, -1));

        id.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        id.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFocusLost(evt);
            }
        });
        jPanel1.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 110, 30));

        cmp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cmp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmpFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmpFocusLost(evt);
            }
        });
        jPanel1.add(cmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 550, 30));

        name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFocusLost(evt);
            }
        });
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, 110, 30));

        phn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        phn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        phn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phnFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phnFocusLost(evt);
            }
        });
        jPanel1.add(phn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 120, 30));

        stat.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        stat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        stat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                statFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                statFocusLost(evt);
            }
        });
        jPanel1.add(stat, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 110, 30));

        jButton6.setBackground(new java.awt.Color(0, 203, 133));
        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("INSERT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, -1, 40));

        jButton7.setBackground(new java.awt.Color(0, 203, 133));
        jButton7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton7.setText("UPDATE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, -1, 40));

        del.setBackground(new java.awt.Color(0, 203, 133));
        del.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        del.setText("DELETE");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });
        jPanel1.add(del, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, -1, 40));
        jPanel1.add(hid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 120, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        jButton9.setBackground(new java.awt.Color(0, 203, 133));
        jButton9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton9.setText("REFRESH");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 440, -1, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel tbm1 = (DefaultTableModel) comTable.getModel();
  String pID = tbm1.getValueAt(comTable.getSelectedRow(), 0).toString();
        String tid = tbm1.getValueAt(comTable.getSelectedRow(), 1).toString();

        String tName = tbm1.getValueAt(comTable.getSelectedRow(), 2).toString();
        String tcontact = tbm1.getValueAt(comTable.getSelectedRow(), 3).toString();
         String stu = tbm1.getValueAt(comTable.getSelectedRow(), 4).toString();
          String comp = tbm1.getValueAt(comTable.getSelectedRow(), 5).toString();
               
               
                if (stu.equals("")||comp.equals("")) {
               
                stu="NULL";
                comp="NULL";

            }
                hid.setText(pID);
        id.setText(tid);
        name.setText(tName);
    
        phn.setText(tcontact);
          stat.setText(stu);
          cmp.setText(comp);
      
    }//GEN-LAST:event_comTableMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void csTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_csTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_csTable1MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_idFocusGained

    private void idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_idFocusLost

    private void cmpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmpFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpFocusGained

    private void cmpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmpFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpFocusLost

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFocusGained

    private void nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFocusLost

    private void phnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phnFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_phnFocusGained

    private void phnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phnFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_phnFocusLost

    private void statFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_statFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_statFocusGained

    private void statFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_statFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_statFocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

       String st="", ps=""; 
        String tid= id.getText();
       String tname= name.getText();
      String tNo=  phn.getText();
       st=   stat.getText();
        ps=   cmp.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            if (st.equals("")||ps.equals("")) {
               
                st="NULL";
                ps="NULL";

            } else {

                Statement statement = connection.createStatement();

                String sql = "INSERT INTO helpline VALUES ('" +  Integer.parseInt(tid) + "','" + st + "','" + ps + "')";

                PreparedStatement prepare = connection.prepareStatement(sql);

                prepare.executeUpdate();
                
                DefaultTableModel tbm = (DefaultTableModel) comTable.getModel();
                tbm.setRowCount(0);
                //  show user();

                JOptionPane.showMessageDialog(this, "Inserted Successfully.");

            }
            connection.close();
        } catch (SQLException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        
        String tname = "", temail = "", taddress = "", customerId = "";
        int tNo;
        
        String problem="";
         String st="", ps=""; 
        DefaultTableModel defaultTableModel = (DefaultTableModel) comTable.getModel();

        if (comTable.getSelectedRowCount() == 1) {
            //   System.out.println("at update");

          
            st=   stat.getText();
        ps=   cmp.getText();

            int row = comTable.getSelectedRow();
            customerId = defaultTableModel.getValueAt(row, 1).toString();
            
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");
                
                
                 Statement statement = connection.createStatement();

                ResultSet resultSet1 = statement.executeQuery("Select helpId from helpline where customerId= ('" + Integer.parseInt(customerId) + "');" );
                  if (resultSet1.next()) {
                 problem = resultSet1.getString("helpId");
                // System.out.println("at update");
                  String sql = "UPDATE helpline SET problem_status='" + st + "', problem_description='" + ps + "' where helpId = '" + Integer.parseInt(problem) + "';";

                PreparedStatement prepare = connection.prepareStatement(sql);

                prepare.executeUpdate();
                
          //JOptionPane.showMessageDialog(this, "Hoiseeee .");

                  }

               
               
                DefaultTableModel tbm = (DefaultTableModel) comTable.getModel();
                tbm.setRowCount(0);
                JOptionPane.showMessageDialog(this, "Successfully Updated.");
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        // TODO add your handling code here:
        
        
        
        String tname = "", temail = "", taddress = "", customerId = "";
        int tNo;
          String st="", ps=""; 
          String help;
        DefaultTableModel defaultTableModel = (DefaultTableModel) comTable.getModel();

        if (comTable.getSelectedRowCount() == 1) {
/*
            tname = name.getText();
            temail = email.getText();
            taddress = address.getText();
            tNo = Integer.parseInt(contactNo.getText());
          */  
                 st=   stat.getText();
        ps=   cmp.getText();

            int row = comTable.getSelectedRow();
            customerId = defaultTableModel.getValueAt(row, 1).toString();

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

         
                    Statement statement = connection.createStatement();
                    
                    ResultSet resultSet1 = statement.executeQuery("Select helpId from helpline where customerId= ('" + Integer.parseInt(customerId) + "');" );
                  if (resultSet1.next()) {
                 help = resultSet1.getString("helpId");
                 String sql = "DELETE FROM helpline WHERE helpId = " + Integer.parseInt(help) + ";";

                    PreparedStatement prepare = connection.prepareStatement(sql);

                    prepare.executeUpdate();
                     DefaultTableModel tbm = (DefaultTableModel) comTable.getModel();
                tbm.setRowCount(0);

                    JOptionPane.showMessageDialog(this, "Deleted Successfully");

                  }

                    
                
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            if (comTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table Empty");

            } else {
                JOptionPane.showMessageDialog(this, "Please select a row for delete. ");
            }

        }
    }//GEN-LAST:event_delActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbm = (DefaultTableModel) comTable.getModel();
                tbm.setRowCount(0);  
        
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            String sql = "SELECT customer.customerId, customer.cName, customer.cPhoneNo,helpline.helpId, helpline.problem_status,helpline.problem_description From customer LEFT JOIN helpline on customer.customerId=helpline.customerId";
//    String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
    
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {
               

                String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
              //  String femail = resultSet.getString("cEmail");

                String fAd = resultSet.getString("helpId");
                String fNo = resultSet.getString("cPhoneNo");
                String p=  resultSet.getString("problem_status");
                String p_state= resultSet.getString("problem_description");

                String tData[] = {fAd,id, fname,fNo,p,p_state};
                DefaultTableModel tbm1 = (DefaultTableModel) comTable.getModel();
                tbm1.addRow(tData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel tbm = (DefaultTableModel) comTable.getModel();
                tbm.setRowCount(0);
        String value = jComboBox1.getSelectedItem().toString();
        if (value.equals("NAME")) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead = dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                //    ResultSet resultSet = statement.executeQuery
                String sql = "SELECT customer.customerId, customer.cName, customer.cPhoneNo,helpline.helpId, helpline.problem_status,helpline.problem_description From customer LEFT JOIN helpline on customer.customerId=helpline.customerId where customer.cName like '%"+ dead +"%' ";
//    String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
    
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
              //  String femail = resultSet.getString("cEmail");

               
                String fNo = resultSet.getString("cPhoneNo");
                 String fAd = resultSet.getString("helpId");
                String p=  resultSet.getString("problem_status");
                String p_state= resultSet.getString("problem_description");

                String tData[] = {fAd,id, fname,fNo,p,p_state};
                DefaultTableModel tbm1 = (DefaultTableModel) comTable.getModel();
                tbm1.addRow(tData);

                } 
           
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else if (value.equals("ID")) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                String dead = dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                //    ResultSet resultSet = statement.executeQuery
               String sql = "SELECT customer.customerId, customer.cName, customer.cPhoneNo,helpline.helpId, helpline.problem_status,helpline.problem_description From customer LEFT JOIN helpline on customer.customerId=helpline.customerId where customer.customerId like '%"+ Integer.parseInt(dead) +"%' ";
//    String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
    
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
              //  String femail = resultSet.getString("cEmail");

               String fNo = resultSet.getString("cPhoneNo");
                 String fAd = resultSet.getString("helpId");
                String p=  resultSet.getString("problem_status");
                String p_state= resultSet.getString("problem_description");

                String tData[] = {fAd,id, fname,fNo,p,p_state};
                DefaultTableModel tbm1 = (DefaultTableModel) comTable.getModel();
                tbm1.addRow(tData);
            }
            } catch (Exception e) {
                e.printStackTrace();
            }
    }  
        else if (value.equals("STATUS")) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=Broadband;selectMethod=cursor", "sa", "123456");

                 String dead = dline.getText();
                // String size= jTextField2.getText();

                Statement statement = connection.createStatement();

                //String Client_Name = null;
                //String Email = null;
                //String sql="SELECT cName,cPhoneNo FROM customer WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                // String sql= "SELECT customer.cName, bill.amount,bill.deadline, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId  WHERE customerId = '"+ Integer.parseInt(dead) +"'";
                //    ResultSet resultSet = statement.executeQuery
                String sql = "SELECT customer.customerId, customer.cName, customer.cPhoneNo,helpline.helpId, helpline.problem_status,helpline.problem_description From customer LEFT JOIN helpline on customer.customerId=helpline.customerId where helpline.problem_status like '"+ dead +"' ";
//    String sql= "SELECT bill.billId, customer.customerId, customer.cName, bill.amount, bill.status,customer.cPhoneNo From bill INNER JOIN customer ON bill.customerId=customer.customerId ";
    
            ResultSet resultSet = statement
                    .executeQuery(sql);

            while (resultSet.next()) {

                String id = resultSet.getString("customerId");
                String fname = resultSet.getString("cName");
              //  String femail = resultSet.getString("cEmail");

               
                String fNo = resultSet.getString("cPhoneNo");
                 String fAd = resultSet.getString("helpId");
                String p=  resultSet.getString("problem_status");
                String p_state= resultSet.getString("problem_description");

                String tData[] = {fAd,id, fname,fNo,p,p_state};
                DefaultTableModel tbm1 = (DefaultTableModel) comTable.getModel();
                tbm1.addRow(tData);

                } 
           
            } catch (Exception e) {
                e.printStackTrace();
            }
        } 
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cmp;
    private javax.swing.JTable comTable;
    private javax.swing.JTable csTable1;
    private javax.swing.JButton del;
    private javax.swing.JTextField dline;
    private javax.swing.JTextField hid;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phn;
    private javax.swing.JTextField stat;
    // End of variables declaration//GEN-END:variables
}
